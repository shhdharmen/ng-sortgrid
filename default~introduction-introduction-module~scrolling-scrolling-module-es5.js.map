{"version":3,"sources":["webpack:///ng-sortgrid/src/lib/helpers/class/ngsg-class.service.ts","webpack:///ng-sortgrid/src/lib/helpers/element/ngsg-elements.helper.ts","webpack:///ng-sortgrid/src/lib/helpers/scroll/scroll-helper.service.ts","webpack:///ng-sortgrid/src/lib/mutliselect/ngsg-selection.service.ts","webpack:///ng-sortgrid/src/lib/ngsg-item.directive.ts","webpack:///ng-sortgrid/src/lib/ngsg.module.ts","webpack:///ng-sortgrid/src/lib/shared/ngsg-events.service.ts","webpack:///ng-sortgrid/src/lib/sort/reflection/ngsg-reflect.service.ts","webpack:///ng-sortgrid/src/lib/sort/sort/ngsg-sort.service.ts","webpack:///ng-sortgrid/src/lib/store/ngsg-store.service.ts","webpack:///src/app/shared/card/card.component.ts","webpack:///src/app/shared/card/card.component.html","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/shared/nav/nav.component.ts","webpack:///src/app/shared/nav/nav.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/step/step.component.ts","webpack:///src/app/shared/step/step.component.html"],"names":["NgsgClassService","SELECTED_DEFAULT_CLASS","PLACEHOLDER_DEFAULT_CLASS","DROPPED_DEFAULT_CLASS","element","classList","add","remove","providedIn","NgsgElementsHelper","allElements","parentNode","children","Array","prototype","indexOf","call","ScrollHelperService","document","DEFAULT_SCROLLSPEED","SCROLL_BUFFER","window","defaultView","event","scrollPoints","scrollSpeed","currentPosition","pageY","scrollY","isTopScrollNeeded","top","scrollBy","behavior","isBottomScrollNeeded","bottom","scrollPointTop","scrollPointBottom","innerHeight","ChangeAction","NgsgSelectionService","classService","ngsgStore","COMMAND_KEY","CONTROL_KEY","selectionChange$","selectionKeyPressed$","selectionKeyPressed","pipe","subscribe","selectionChange","handleSelectionChange","resetSelectedItems","key","group","getSelectedItems","forEach","item","removeSelectedClass","node","action","ADD","addSelectedClass","addSelectedItem","originalIndex","findIndex","REMOVE","removeSelectedItem","keyboardEvent","keyup","dragedElement","hasSelectedItems","selected","next","selector","NgsgItemDirective","el","sortService","selectionService","reflectService","ngsgEventService","scrollHelperService","ngSortGridGroup","autoScroll","sorted","destroy$","dropped$","nativeElement","scrollIfNecessary","changes","sortGridItemChanges","ngSortGridItems","sortGridItems","currentValue","hasGroup","initState","setItems","draggable","complete","occuredOnHost","selectElementIfNoSelection","target","initSort","sort","preventDefault","hasItems","console","warn","previousOrder","getItems","endSort","currentOrder","reflectChanges","isItemCurrentlySelected","updateSelectedDragItem","index","find","matches","dragStart","dragEnter","dragOver","drop","clicked","NgsgModule","declarations","exports","NgsgEventsService","NgsgReflectService","items","selectedElements","selectedElementIndices","getSelectedElementsIndices","selectedItems","sortedIndices","dropIndex","findDropIndex","length","splice","pop","result","getReflectedItems","beforeSelection","slice","afterSelection","selectedElementIndexes","push","map","selectedElement","isDropInSelection","collection","dropElement","dragElment","NgsgSortService","dragIndex","getFirstSelectItem","dragElements","hoverIndex","getSibling","dragElement","insertedNode","insertBefore","addPlaceHolderClass","updateDropedItem","nextSibling","removePlaceHolderClass","addDroppedClass","removeDroppedClass","NgsgStoreService","state","Map","classes","set","get","updatedItems","filter","setSelectedItems","has","CardComponent","templateUrl","styleUrls","HeaderComponent","NavComponent","fixed","height","subtitle","SharedModule","imports","StepComponent","title","image"],"mappings":"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","file":"default~introduction-introduction-module~scrolling-scrolling-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgClassService {\n  private SELECTED_DEFAULT_CLASS = 'ng-sg-selected';\n  private PLACEHOLDER_DEFAULT_CLASS = 'ng-sg-placeholder';\n  private DROPPED_DEFAULT_CLASS = 'ng-sg-dropped';\n\n  public addPlaceHolderClass(element: Element): void {\n    element.classList.add(this.PLACEHOLDER_DEFAULT_CLASS);\n  }\n\n  public removePlaceHolderClass(element: Element): void {\n    element.classList.remove(this.PLACEHOLDER_DEFAULT_CLASS);\n  }\n\n  public addDroppedClass(element: Element): void {\n    element.classList.add(this.DROPPED_DEFAULT_CLASS);\n  }\n\n  public removeDroppedClass(element: Element): void {\n    element.classList.remove(this.DROPPED_DEFAULT_CLASS);\n  }\n\n  public addSelectedClass(element: Element): void {\n    element.classList.add(this.SELECTED_DEFAULT_CLASS);\n  }\n\n  public removeSelectedClass(element: Element): void {\n    element.classList.remove(this.SELECTED_DEFAULT_CLASS);\n  }\n\n}\n","export class NgsgElementsHelper {\n\n  public static findIndex(element: Element): number {\n    const allElements = element.parentNode.children;\n    return Array.prototype.indexOf.call(allElements, element);\n  }\n}\n","import {DOCUMENT} from '@angular/common';\nimport {Inject, Injectable} from '@angular/core';\n\nexport interface ScrollPoints {\n  top?: number;\n  bottom?: number;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ScrollHelperService {\n\n  private window: WindowProxy;\n  private DEFAULT_SCROLLSPEED = 50;\n  private SCROLL_BUFFER = 50;\n\n  constructor(@Inject(DOCUMENT) private document) {\n    this.window = document.defaultView;\n  }\n\n  public scrollIfNecessary(event: any, scrollPoints: ScrollPoints = {}, scrollSpeed?: number): void {\n    const currentPosition = event.pageY - this.window.scrollY;\n\n    if (this.isTopScrollNeeded(currentPosition, scrollPoints.top)) {\n      this.window.scrollBy({top: -scrollSpeed || -this.DEFAULT_SCROLLSPEED, behavior: 'smooth'});\n      return;\n    }\n\n    if (this.isBottomScrollNeeded(currentPosition, scrollPoints.bottom)) {\n      this.window.scrollBy({top: scrollSpeed || this.DEFAULT_SCROLLSPEED, behavior: 'smooth'});\n    }\n  }\n\n  private isTopScrollNeeded(currentPosition: number, scrollPointTop: number): boolean {\n    return scrollPointTop ? currentPosition < scrollPointTop :\n      currentPosition < this.SCROLL_BUFFER;\n  }\n\n  private isBottomScrollNeeded(currentPosition: number, scrollPointBottom: number): boolean {\n    return scrollPointBottom ? currentPosition > scrollPointBottom :\n      currentPosition > this.window.innerHeight - this.SCROLL_BUFFER;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {fromEvent, merge, NEVER, Observable, Subject} from 'rxjs';\nimport {filter, mapTo, switchMap, withLatestFrom} from 'rxjs/operators';\n\nimport {NgsgClassService} from '../helpers/class/ngsg-class.service';\nimport {NgsgElementsHelper} from '../helpers/element/ngsg-elements.helper';\nimport {NgsgStoreService} from '../store/ngsg-store.service';\n\nenum ChangeAction {\n  ADD,\n  REMOVE\n}\n\ninterface SelectionChange {\n  key: string;\n  item: Element;\n  action: ChangeAction;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgSelectionService {\n  private COMMAND_KEY = 'Meta';\n  private CONTROL_KEY = 'Control';\n\n  private selectionChange$ = new Subject<SelectionChange>();\n\n  constructor(private classService: NgsgClassService, private ngsgStore: NgsgStoreService) {\n    const selectionKeyPressed$ = this.selectionKeyPressed();\n    this.selectionChange$\n      .pipe(withLatestFrom(selectionKeyPressed$))\n      .subscribe(([selectionChange, selectionKeyPressed]) => {\n        selectionKeyPressed\n          ? this.handleSelectionChange(selectionChange)\n          : this.resetSelectedItems(selectionChange.key);\n      });\n  }\n\n  private resetSelectedItems(group: string): void {\n    this.ngsgStore.getSelectedItems(group).forEach(item => this.classService.removeSelectedClass(item.node));\n    this.ngsgStore.resetSelectedItems(group);\n  }\n\n  private handleSelectionChange(selectionChange: SelectionChange): void {\n    if (selectionChange.action === ChangeAction.ADD) {\n      this.classService.addSelectedClass(selectionChange.item);\n      this.ngsgStore.addSelectedItem(selectionChange.key, {\n        node: selectionChange.item,\n        originalIndex: NgsgElementsHelper.findIndex(selectionChange.item)\n      });\n    }\n    if (selectionChange.action === ChangeAction.REMOVE) {\n      this.classService.removeSelectedClass(selectionChange.item);\n      this.ngsgStore.removeSelectedItem(selectionChange.key, selectionChange.item);\n    }\n  }\n\n  private selectionKeyPressed(): Observable<boolean> {\n    const selectionKeyPressed = fromEvent(window, 'keydown').pipe(\n      filter(\n        (keyboardEvent: KeyboardEvent) =>\n          keyboardEvent.key === this.COMMAND_KEY || keyboardEvent.key === this.CONTROL_KEY\n      ),\n      mapTo(true)\n    );\n    const keyup = fromEvent(window, 'keyup').pipe(mapTo(false));\n    return merge(selectionKeyPressed, keyup);\n  }\n\n  public selectElementIfNoSelection(group: string, dragedElement: Element): void {\n    if (this.ngsgStore.hasSelectedItems(group)) {\n      return;\n    }\n    this.ngsgStore.addSelectedItem(group, {\n      node: dragedElement,\n      originalIndex: NgsgElementsHelper.findIndex(dragedElement)\n    });\n  }\n\n  public updateSelectedDragItem(key: string, item: Element, selected: boolean): void {\n    this.selectionChange$.next({\n      key,\n      item,\n      action: selected ? ChangeAction.ADD : ChangeAction.REMOVE\n    });\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {fromEvent, Subject} from 'rxjs';\nimport {takeUntil, takeWhile, throttleTime} from 'rxjs/operators';\n\nimport {NgsgElementsHelper} from './helpers/element/ngsg-elements.helper';\nimport {ScrollHelperService} from './helpers/scroll/scroll-helper.service';\nimport {NgsgSelectionService} from './mutliselect/ngsg-selection.service';\nimport {NgsgEventsService} from './shared/ngsg-events.service';\nimport {NgsgOrderChange} from './shared/ngsg-order-change.model';\nimport {NgsgReflectService} from './sort/reflection/ngsg-reflect.service';\nimport {NgsgSortService} from './sort/sort/ngsg-sort.service';\nimport {NgsgStoreService} from './store/ngsg-store.service';\n\nconst selector = '[ngSortgridItem]';\n\n@Directive({selector})\nexport class NgsgItemDirective implements OnInit, OnChanges, AfterViewInit, OnDestroy {\n  @Input() ngSortGridGroup = 'defaultGroup';\n  @Input() ngSortGridItems: any[];\n  @Input() scrollPointTop: number;\n  @Input() scrollPointBottom: number;\n  @Input() scrollSpeed: number;\n  @Input() autoScroll = false;\n\n  @Output() sorted = new EventEmitter<NgsgOrderChange<any>>();\n\n  private selected = false;\n  private destroy$ = new Subject();\n\n  constructor(\n    public el: ElementRef,\n    private sortService: NgsgSortService,\n    private selectionService: NgsgSelectionService,\n    private reflectService: NgsgReflectService,\n    private ngsgStore: NgsgStoreService,\n    private ngsgEventService: NgsgEventsService,\n    private scrollHelperService: ScrollHelperService\n  ) {\n  }\n\n  ngOnInit(): void {\n    this.ngsgEventService.dropped$.pipe(\n      takeUntil(this.destroy$)\n    ).subscribe(() => this.selected = false);\n\n    fromEvent<DragEvent>(this.el.nativeElement, 'drag').pipe(\n      throttleTime(20),\n      takeUntil(this.destroy$),\n      takeWhile(() => this.autoScroll)\n    ).subscribe(() => {\n        this.scrollHelperService.scrollIfNecessary(event, {\n          top: this.scrollPointTop,\n          bottom: this.scrollPointBottom\n        }, this.scrollSpeed);\n      }\n    );\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const sortGridItemChanges = changes.ngSortGridItems;\n    const sortGridItems = sortGridItemChanges.currentValue ? sortGridItemChanges.currentValue : [];\n\n    if (!this.ngsgStore.hasGroup(this.ngSortGridGroup)) {\n      this.ngsgStore.initState(this.ngSortGridGroup, sortGridItems);\n      return;\n    }\n    this.ngsgStore.setItems(this.ngSortGridGroup, sortGridItems);\n  }\n\n  ngAfterViewInit(): void {\n    this.el.nativeElement.draggable = true;\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  @HostListener('dragstart', ['$event'])\n  dragStart(event): void {\n    if (!this.occuredOnHost(event)) {\n      return;\n    }\n    this.selectionService.selectElementIfNoSelection(this.ngSortGridGroup, event.target);\n    this.sortService.initSort(this.ngSortGridGroup);\n  }\n\n  @HostListener('dragenter')\n  dragEnter(): void {\n    if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n      return;\n    }\n    this.sortService.sort(this.el.nativeElement);\n  }\n\n  @HostListener('dragover', ['$event'])\n  dragOver(event): boolean {\n    if (event.preventDefault) {\n      // Necessary. Allows us to drop.\n      event.preventDefault();\n    }\n    return false;\n  }\n\n  @HostListener('dragend')\n  drop(): void {\n    if (!this.ngsgStore.hasSelectedItems(this.ngSortGridGroup)) {\n      return;\n    }\n\n    if (!this.ngsgStore.hasItems(this.ngSortGridGroup)) {\n      console.warn(`Ng-sortgrid: No items provided - please use [sortGridItems] to pass in an array of items -\n      otherwhise the ordered items can not be emitted in the (sorted) event`);\n      return;\n    }\n    const previousOrder = [...this.ngsgStore.getItems(this.ngSortGridGroup)];\n    this.sortService.endSort();\n    const currentOrder = this.reflectService.reflectChanges(this.ngSortGridGroup, this.el.nativeElement);\n    this.sorted.next({previousOrder, currentOrder});\n    this.ngsgStore.resetSelectedItems(this.ngSortGridGroup);\n    this.ngsgEventService.dropped$.next();\n  }\n\n  @HostListener('click')\n  clicked(): void {\n    this.selected = !this.isItemCurrentlySelected();\n    this.selectionService.updateSelectedDragItem(this.ngSortGridGroup, this.el.nativeElement, this.selected);\n  }\n\n  private isItemCurrentlySelected(): boolean {\n    const index = NgsgElementsHelper.findIndex(this.el.nativeElement);\n    return !!this.ngsgStore.getSelectedItems(this.ngSortGridGroup)\n      .find(element => element.originalIndex === index);\n  }\n\n  private occuredOnHost(event): boolean {\n    return event.target.matches(selector);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { NgsgItemDirective } from './ngsg-item.directive';\n\n@NgModule({\n  declarations: [NgsgItemDirective],\n  exports: [NgsgItemDirective]\n})\nexport class NgsgModule {}\n","import {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgEventsService {\n  public dropped$ = new Subject();\n}\n","import { Injectable } from '@angular/core';\n\nimport {NgsgElementsHelper} from '../../helpers/element/ngsg-elements.helper';\nimport {NgsgDragelement} from '../../shared/ngsg-dragelement.model';\nimport {NgsgStoreService} from '../../store/ngsg-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgReflectService {\n  constructor(private ngsgStore: NgsgStoreService) {}\n\n  public reflectChanges(key: string, element: Element): any[] {\n    const items = this.ngsgStore.getItems(key);\n    const selectedElements = this.ngsgStore.getSelectedItems(key);\n    const selectedElementIndices = this.getSelectedElementsIndices(selectedElements);\n    const selectedItems = this.getSelectedItems(items, selectedElementIndices);\n    const sortedIndices = selectedElementIndices.sort();\n    const dropIndex = this.findDropIndex(selectedElements, element);\n\n    while (sortedIndices.length > 0) {\n      items.splice(sortedIndices.pop(), 1);\n    }\n\n    const result = this.getReflectedItems(items, selectedItems, dropIndex);\n    this.ngsgStore.setItems(key, result);\n    return result;\n  }\n\n  private getReflectedItems(items: any, selectedItems: any, dropIndex: number): any[] {\n    const beforeSelection = items.slice(0, dropIndex);\n    const afterSelection = items.slice(dropIndex, items.length);\n    return [...beforeSelection, ...selectedItems, ...afterSelection];\n  }\n\n  private getSelectedItems(items: any[], selectedElementIndexes: number[]): any[] {\n    const selectedItems = [];\n    selectedElementIndexes.forEach(index => {\n      selectedItems.push(items[index]);\n    });\n    return selectedItems;\n  }\n\n  private getSelectedElementsIndices(selectedElements: NgsgDragelement[]): number[] {\n    return selectedElements.map((selectedElement: NgsgDragelement) => selectedElement.originalIndex);\n  }\n\n  private findDropIndex(selectedElements: NgsgDragelement[], element: Element): number {\n    if (this.isDropInSelection(selectedElements, element)) {\n      return NgsgElementsHelper.findIndex(selectedElements[0].node);\n    }\n    return NgsgElementsHelper.findIndex(element);\n  }\n\n  private isDropInSelection(collection: NgsgDragelement[], dropElement: Element): boolean {\n    return !!collection.find((dragElment: NgsgDragelement) => dragElment.node === dropElement);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { timer } from 'rxjs';\n\nimport {NgsgClassService} from '../../helpers/class/ngsg-class.service';\nimport {NgsgElementsHelper} from '../../helpers/element/ngsg-elements.helper';\nimport {NgsgDragelement} from '../../shared/ngsg-dragelement.model';\nimport {NgsgStoreService} from '../../store/ngsg-store.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgSortService {\n  private dragIndex: number;\n  private dragElements: NgsgDragelement[];\n\n  constructor(\n    private classService: NgsgClassService,\n    private ngsgStore: NgsgStoreService\n  ) {}\n\n  public initSort(group: string): void {\n    this.dragIndex = this.ngsgStore.getFirstSelectItem(group).originalIndex;\n    this.dragElements = this.ngsgStore.getSelectedItems(group);\n  }\n\n  public sort(dropElement: Element): void {\n    const hoverIndex = NgsgElementsHelper.findIndex(dropElement);\n    const el = this.getSibling(dropElement, this.dragIndex, hoverIndex);\n\n    if (this.isDropInSelection(el)) {\n      return;\n    }\n    this.dragElements.forEach((dragElement: NgsgDragelement) => {\n      const insertedNode = dropElement.parentNode.insertBefore(dragElement.node, el.node);\n      this.classService.addPlaceHolderClass(insertedNode as Element);\n    });\n    this.dragIndex = NgsgElementsHelper.findIndex(this.dragElements[0].node);\n  }\n\n  public endSort(): void {\n    this.dragElements.forEach((dragElement: NgsgDragelement) => {\n      this.updateDropedItem(dragElement.node);\n    });\n  }\n\n  private getSibling(dropElement: any, dragIndex: number, hoverIndex: number): NgsgDragelement | null {\n    if (dragIndex < hoverIndex) {\n      return { node: dropElement.nextSibling, originalIndex: hoverIndex + 1 };\n    }\n    return { node: dropElement, originalIndex: hoverIndex };\n  }\n\n  private isDropInSelection(dropElement: NgsgDragelement): boolean {\n    return !!this.dragElements.find((dragElment: NgsgDragelement) => dragElment.node === dropElement.node);\n  }\n\n  private updateDropedItem(item: Element): void {\n    this.classService.removePlaceHolderClass(item);\n    this.classService.addDroppedClass(item);\n    this.classService.removeSelectedClass(item);\n    timer(500).subscribe(() => this.classService.removeDroppedClass(item));\n  }\n}\n","import {Injectable} from '@angular/core';\n\nimport {NgsgDragelement} from '../shared/ngsg-dragelement.model';\n\n// TODO add interfaces for classes\nexport interface NgsgState {\n  items: any[];\n  classes: any;\n  selectedItems: NgsgDragelement[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgsgStoreService {\n  private state = new Map<string, NgsgState>();\n\n  public initState(group: string, items: any[] = [], classes: any = {}): void {\n    this.state.set(group, {items: [...items], classes, selectedItems: []});\n  }\n\n  public addSelectedItem(group: string, dragElement: NgsgDragelement): void {\n    this.state.get(group).selectedItems.push(dragElement);\n  }\n\n  public removeSelectedItem(group: string, item: Element): void {\n    const updatedItems = this.state.get(group).selectedItems\n      .filter((dragElement: NgsgDragelement) => dragElement.node !== item);\n    this.setSelectedItems(group, updatedItems);\n  }\n\n  public setItems(group: string, items: any): void {\n    this.state.get(group).items = [...items];\n  }\n\n  public getItems(group: string): any[] {\n    return this.state.get(group).items;\n  }\n\n  public hasItems(group: string): boolean {\n    return this.getItems(group).length > 0;\n  }\n\n  public hasGroup(group: string): boolean {\n    return this.state.has(group);\n  }\n\n  public getSelectedItems(group: string): NgsgDragelement[] {\n    return this.state.get(group).selectedItems;\n  }\n\n  public setSelectedItems(group: string, selectedItems: any[]): void {\n    this.state.get(group).selectedItems = [...selectedItems];\n  }\n\n  public getFirstSelectItem(group: string): NgsgDragelement {\n    return this.state.get(group).selectedItems[0];\n  }\n\n  public hasSelectedItems(group: string): boolean {\n    return this.getSelectedItems(group).length > 0;\n  }\n\n  public resetSelectedItems(group: string): void {\n    this.setSelectedItems(group, []);\n  }\n\n  public getClasses(group: string): any[] {\n    return this.state.get(group).classes;\n  }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngsg-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.css']\n})\nexport class CardComponent {\n\n  @Input() item: number;\n}\n","<div>\n  <h1 style=\"color: darkslategray\">\n    {{ item }}\n  </h1>\n</div>\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'ngsg-demo-header',\n  templateUrl: 'header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent {\n}\n","<header class=\"header py-5 mb-5\">\n  <div class=\"container h-100\">\n    <div class=\"row h-100 align-items-center\">\n      <div class=\"col-lg-12\">\n        <h1 class=\"display-4 text-white mt-5 mb-2\">Draggable sort grid with multiselction</h1>\n        <h2 class=\"lead mb-5 text-white\">Use the ngSortgridItem directive to turn your lists into a grid where single\n          or even multiple files can be sorted via drag & drop.</h2>\n      </div>\n    </div>\n  </div>\n</header>\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngsg-demo-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent {\n  @Input() fixed = false;\n  @Input() height = '140px';\n  @Input() subtitle;\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark\"\n     [ngStyle]=\"{'height': height}\"\n     [ngClass]=\"{'fixed-top': fixed}\">\n  <div class=\"container\">\n    <a class=\"navbar-brand\" href=\"#\" style=\"font-size: 30px\">\n      <img class=\"logo\" src=\"assets/ng-sortgrid-logo.png\"/>\n      <small class=\"subtitle\" *ngIf=\"subtitle\">{{subtitle}}</small>\n    </a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarResponsive\"\n            aria-controls=\"navbarResponsive\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n      <ul class=\"navbar-nav ml-auto\">\n        <li class=\"nav-item active\">\n          <a class=\"nav-link\" href=\"https://twitter.com/kreuzercode\" target=\"_blank\">\n            <i class=\"icon fab fa-twitter fa-2x\"></i>\n          </a>\n        </li>\n        <li class=\"nav-item\">\n          <a class=\"nav-link\" href=\"https://github.com/kreuzerk/ng-sortgrid\" target=\"_blank\">\n            <i class=\"icon fab fa-github fa-2x\"></i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</nav>\n\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport {CardComponent} from './card/card.component';\nimport {HeaderComponent} from './header/header.component';\nimport {NavComponent} from './nav/nav.component';\nimport {StepComponent} from './step/step.component';\n\n@NgModule({\n  declarations: [StepComponent, HeaderComponent, NavComponent, CardComponent],\n  exports: [StepComponent, HeaderComponent, NavComponent, CardComponent],\n  imports: [\n    CommonModule\n  ]\n})\nexport class SharedModule { }\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'ngsg-demo-step',\n  templateUrl: 'step.component.html',\n  styleUrls: ['step.component.css']\n})\nexport class StepComponent {\n\n  @Input() title: string;\n  @Input() image: string;\n}\n","<h5 class=\"step-title\">{{title}}</h5>\n<img *ngIf=\"image\" [src]=\"'assets/' + image\" class=\"step-image\"/>\n<hr/>\n"]}